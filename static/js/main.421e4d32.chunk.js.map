{"version":3,"sources":["components/error-indicator/error-picture.png","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/firebase/firebase.js","components/firebase/index.js","components/frame-list-item/index.js","components/frame-list-item/frame-list-item.js","components/frame-store-service-context/frame-store-service-context.js","components/hoc/with-frame-store-service.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/admin-panel/index.js","components/admin-panel/admin-panel.js","components/frame-list/frame-list.js","components/frame-list/index.js","components/pages/home-page.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/cart-page.js","components/pages/login-page.js","components/pages/register-page.js","components/pages/success-page.js","components/pages/orders-page.js","components/pages/reset-page.js","components/shop-header/index.js","components/shop-header/shop-header.js","components/app/index.js","components/app/app.js","services/frame-store-service.js","reducers/frame-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["module","exports","ErrorIndicator","className","src","icon","alt","width","ErrorBoundary","state","hasError","this","setState","props","children","Component","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","SendInfo","name","color","price","image","a","storage","ref","child","getDownloadURL","url","getMaxId","key","id","db","collection","add","height","Promise","resolve","reject","console","log","sendImage","storageRef","put","sendOrder","email","order","total","phone","removeItem","doc","delete","removeOrder","app","initializeApp","auth","firestore","password","signInWithEmailAndPassword","signOut","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","user","sendEmailVerification","then","catch","error","sendPasswordResetEmail","onAuthStateChanged","uid","get","numArray","Math","max","apply","querySnapshot","data","forEach","push","getMaxOfArray","object","set","FrameListItem","frame","widthChanged","heightChanged","onAddedToCart","onRemoveItem","cost","round","removeButton","firebase","getCurrentUserUid","onClick","href","type","min","minLength","defaultValue","onChange","React","createContext","FrameStoreServiceProvider","Provider","FrameStoreServiceConsumer","Consumer","withFrameStoreService","Wrapped","frameStoreService","framesLoaded","newFrames","payload","framesRequested","framesError","frameAddedToCart","frameId","frameDeletedfromCart","allFramesDeletedfromCart","clearCart","compose","funcs","comp","reduceRight","wrapped","f","Spinner","AdminPanel","onSendInfo","useState","setName","setColor","setPrice","setImage","onSubmit","e","preventDefault","autoComplete","autoFocus","value","target","files","FrameList","frames","adminPanel","map","Number","FrameListContainer","fetchFrames","loading","connect","frameList","dispatch","ownProps","bindActionCreators","actions","getFrames","err","HomePage","mapDispatchToProps","onIncrease","onDecrease","onDelete","onClear","ShoppingCartTable","withRouter","shoppingCart","items","cartItems","orderTotal","history","userEmail","getCurrentUserEmail","userName","getCurrentUsername","setPhone","useEffect","getCurrentUserPhone","val","renderRow","item","idx","count","length","replace","to","CartPage","setEmail","setPassword","formClass","setFormClass","setLoading","placeholder","showError","login","setTimeout","code","alert","required","register","sendVerification","SuccessPage","OrdersPage","getOrders","orders","renderItems","floor","random","ResetPage","header","setHeader","resetPassword","ShopHeader","numItems","controlButtons","logout","aria-hidden","App","cartItemsTotal","firebaseInitialized","setFirebaseInitialized","isInitialized","role","path","component","LoginPage","RegisterPage","FrameStoreService","updateFrameList","action","undefined","itemIndex","findIndex","newItemHeight","slice","newItemWidth","updateOrder","quantity","find","cartItemIndex","newCartItems","updateCartItems","cartItem","updateCartItem","Object","values","reduce","t","updateShoppingCart","itemToDelete","reducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.421e4d32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error-picture.362c250b.png\";","import ErrorIndicator from './error-indicator'\r\nexport default ErrorIndicator","import React from 'react';\r\nimport './error-indicator.css'\r\nimport icon from './error-picture.png';\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error-indicator\">\r\n            <img src={icon} alt=\"error-icon\" width=\"64\"/>\r\n            <span className=\"boom\">Извините<br/> У нас возникли технические трудности</span>\r\n            <span>Работа скоро будет восстановлена</span>\r\n        </div>\r\n    )\r\n}\r\nexport default ErrorIndicator;","import ErrorBoundary from './error-boundary'\r\nexport default ErrorBoundary","import React, {Component} from 'react'\r\nimport ErrorIndicator from '../error-indicator/'\r\n\r\nexport default class ErrorBoundary extends Component {\r\n    state ={\r\n        hasError: false\r\n    }\r\n        componentDidCatch() {\r\n            this.setState({hasError: true})    \r\n        }\r\n    \r\n        render() {\r\n            if(this.state.hasError) {\r\n                return <ErrorIndicator />\r\n            }\r\n            return this.props.children;\r\n        }\r\n}","import app from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firebase-firestore'\r\nimport 'firebase/firebase-storage'\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDekXqW0APzDphPFRKCSID_MPSIbFO3HoI\",\r\n    authDomain: \"frameshop-6dc38.firebaseapp.com\",\r\n    databaseURL: \"https://frameshop-6dc38.firebaseio.com\",\r\n    projectId: \"frameshop-6dc38\",\r\n    storageBucket: \"frameshop-6dc38.appspot.com\",\r\n    messagingSenderId: \"1037245804641\",\r\n    appId: \"1:1037245804641:web:72132a092bff6e5cd5fa20\",\r\n    measurementId: \"G-8JGBKERKG6\"\r\n};\r\n\r\n\r\n\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(config)\r\n        this.auth = app.auth()\r\n        this.db = app.firestore()\r\n        this.storage = app.storage();\r\n    }\r\n    login(email, password) {\r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    logout() {\r\n        return this.auth.signOut()\r\n    }\r\n    async register(name, email, password) {\r\n        await this.auth.createUserWithEmailAndPassword(email, password)\r\n        return this.auth.currentUser.updateProfile({\r\n            displayName: name,\r\n        })\r\n    }\r\n    async sendVerification() {\r\n        const user = this.auth.currentUser\r\n        await user.sendEmailVerification().then(function () {\r\n            console.log('email-sent');\r\n\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n\r\n        });\r\n    }\r\n    async resetPassword(email) {\r\n        this.auth.sendPasswordResetEmail(email).then(function () {\r\n            console.log('email-sent');\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    isInitialized() {\r\n        return new Promise(resolve => {\r\n            this.auth.onAuthStateChanged(resolve)\r\n        })\r\n    }\r\n    getCurrentUsername() {\r\n        if (this.auth.currentUser)\r\n            return this.auth.currentUser.displayName\r\n    }\r\n    getCurrentUserEmail() {\r\n        if (this.auth.currentUser)\r\n            return this.auth.currentUser.email\r\n    }\r\n    async getCurrentUserPhone() {\r\n        if (this.auth.currentUser) {\r\n            const phone = await this.db.doc(`users-phones/${this.auth.currentUser.uid}`).get()\r\n            if(phone) {\r\n                return phone.get('phone')\r\n            }\r\n            \r\n        }\r\n            \r\n\r\n    }\r\n    getCurrentUserUid() {\r\n        if (this.auth.currentUser)\r\n            return this.auth.currentUser.uid\r\n    }\r\n    getMaxOfArray(numArray) {\r\n        return Math.max.apply(null, numArray);\r\n    }\r\n    async getMaxId() {\r\n        return await this.db.collection(\"frames\").get().then((querySnapshot) => {\r\n            const data = []\r\n            querySnapshot.forEach((doc) => {\r\n                data.push(doc.data().id)\r\n            });\r\n            return data\r\n        }).then(data => this.getMaxOfArray(data) + 1)\r\n    }\r\n    async getFrames() {\r\n        \r\n\r\n        return await this.db.collection(\"frames\").get().then((querySnapshot) => {\r\n            const data = []\r\n            querySnapshot.forEach( (doc) => {\r\n                \r\n                const key = doc.id;\r\n                let object = doc.data()\r\n                object.key = key\r\n                data.push(object)\r\n            });\r\n\r\n            return data\r\n        })\r\n        \r\n    }\r\n    async getOrders() {\r\n        return await this.db.collection(\"orders\").get().then((querySnapshot) => {\r\n            const data = []\r\n            querySnapshot.forEach((doc) => {\r\n                const key = doc.id;\r\n                let object = doc.data()\r\n                object.key = key\r\n                data.push(object)\r\n            });\r\n            return data\r\n        })\r\n    }\r\n\r\n    SendInfo = async (name, color, price, image) => {\r\n        const url = await this.storage.ref().child(`images/${image}`).getDownloadURL()\r\n        const key = await this.getMaxId()\r\n        const id = await this.getMaxId()\r\n        await this.db.collection(\"frames\").add({\r\n            key: key,\r\n            id: id,\r\n            name: name,\r\n            color: color,\r\n            price: price,\r\n            width: 20,\r\n            height: 20,\r\n            image: url\r\n        })\r\n        return new Promise((resolve, reject) => {\r\n            resolve(console.log(\"Document successfully sent!\"))\r\n        })\r\n    }\r\n    sendImage = async (image) => {\r\n        const storageRef = this.storage.ref('images/' + image.name)\r\n        await storageRef.put(image)\r\n    }\r\n    sendOrder = async (name, email, order, total, phone) => {\r\n        await this.db.collection(\"orders\").add({\r\n            name: name,\r\n            email: email,\r\n            order: order,\r\n            total: total,\r\n            phone: phone\r\n        })\r\n        return new Promise((resolve, reject) => {\r\n            resolve(console.log(\"Document successfully sent!\"))\r\n        })\r\n    }\r\n    removeItem = async (key) => {\r\n        await this.db.collection(\"frames\").doc(key).delete()\r\n        return new Promise((resolve, reject) => {\r\n            resolve(console.log(\"Document successfully deleted!\"))\r\n        })\r\n    }\r\n    removeOrder = async (key) => {\r\n        await this.db.collection(\"orders\").doc(key).delete()\r\n        return new Promise((resolve, reject) => {\r\n            resolve(console.log(\"Document successfully deleted!\"))\r\n        })\r\n    }\r\n    setPhone(phone) {\r\n        if(this.auth.currentUser) {\r\n            return this.db.doc(`users-phones/${this.auth.currentUser.uid}`).set({\r\n                phone: phone\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new Firebase()","import Firebase from './firebase'\r\nexport default Firebase","import FrameListItem from './frame-list-item'\r\nexport default FrameListItem","import React from 'react'\nimport './frame-list-item.css'\nimport firebase from '../firebase/'\nconst FrameListItem = ({frame, widthChanged, heightChanged, onAddedToCart, onRemoveItem}) => {\n    const {name, color, image, price, width, height} = frame\n\n    const cost = Math.round(width*height/100*price);\n\n    const removeButton = firebase.getCurrentUserUid() === 'yt22jtNlWVhf0sWJcAR3ElKHcst2' ? <button className=\"btn btn-danger add-to-cart\" onClick = {onRemoveItem}>Удалить</button> : null\n    \n        return (\n            <div href=\"/\" className=\"frame-list-item\">\n                \n                <div className=\"frame-cover\">\n                    <img src={image} alt=\"Рамка\" width=\"200\" height=\"200\"/>\n                </div>\n    \n                <div className=\"frame-description\">\n                    <h3 className=\"title\">{name}</h3> \n                    <span>Цвет: {color}</span>\n                    <span>Цена за метр: {price} рублей</span>\n                    \n                        <label>\n                            <p>Ширина(cм):</p>\n                            <input type=\"number\" min=\"10\" minLength=\"2\" defaultValue={width} onChange={widthChanged}/>\n                        </label>\n    \n                        <label >\n                            <p>Высота(cм):</p>\n                            <input type=\"number\" min=\"10\" minLength=\"2\" defaultValue={height} onChange={heightChanged}/>\n                        </label>\n                    \n                    <span>Цена: {cost}</span>\n                    \n    \n                    <button \n                    className=\"btn btn-secondary add-to-cart\"\n                    onClick = {onAddedToCart}>Добавить в корзину</button>\n                    {removeButton}\n                </div>\n                \n            </div>\n        )\n}\n\nexport default FrameListItem","import React from 'react'\r\n\r\nconst {\r\n    Provider : FrameStoreServiceProvider,\r\n    Consumer : FrameStoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    FrameStoreServiceProvider,\r\n    FrameStoreServiceConsumer\r\n}","import React from 'react'\r\nimport {FrameStoreServiceConsumer} from '../frame-store-service-context'\r\n\r\nconst withFrameStoreService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n        <FrameStoreServiceConsumer>\r\n            {\r\n                (frameStoreService) => {\r\n                    return (\r\n                        <Wrapped {...props} frameStoreService={frameStoreService}/>\r\n                    )\r\n                }\r\n            }\r\n        </FrameStoreServiceConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFrameStoreService","\nconst framesLoaded = (newFrames) => {\n    return {\n        type: 'FETCH_FRAMES_SUCCESS',\n        payload: newFrames\n    }\n}\nconst framesRequested = () => {\n    return {\n        type: 'FETCH_FRAMES_REQUEST'\n    }\n}\nconst widthChanged = (id, width) => {\n    \n    return {\n        type: 'WIDTH_UPDATE',\n        payload: id,\n        width: width,\n    }\n}\nconst heightChanged = (id, height) => {\n\n\n    return {\n        type: 'HEIGHT_UPDATE',\n        payload: id,\n        height: height,\n    }\n}\nconst framesError = (error) => {\n    return{\n        type: 'FRAMES_FAILURE',\n        payload: error\n    }\n}\nconst frameAddedToCart = (frameId) => {\n    return {\n        type: 'FRAME_ADDED_TO_CART',\n        payload: frameId\n    }\n}\nconst frameDeletedfromCart = (frameId) => {\n    return {\n        type: 'FRAME_DELETED_FROM_CART',\n        payload: frameId\n    }\n}\nconst allFramesDeletedfromCart = (frameId) => {\n    return {\n        type: 'ALL_FRAMES_DELETED_FROM_CART',\n        payload: frameId\n    }\n}\nconst clearCart = () => {\n    return {\n        type: 'CLEAR_CART'\n    }\n}\n\nexport {\n    framesLoaded,\n    framesRequested,\n    framesError,\n    widthChanged,\n    heightChanged,\n    frameAddedToCart,\n    frameDeletedfromCart,\n    allFramesDeletedfromCart,\n    clearCart\n}","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n}\r\nexport default compose","import Spinner from './spinner'\r\nexport default Spinner","import React from 'react'\r\n\r\nimport './spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-spinner-kwnefvytxq8 spinner\">\r\n            <div className=\"ldio-zqnhqhb31uk\">\r\n                <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner\r\n\r\n\r\n\r\n\r\n","import AdminPanel from './admin-panel'\r\nexport default AdminPanel","import React, {useState} from 'react'\r\nimport firebase from '../firebase/'\r\nimport './admin-panel.css'\r\n\r\nconst AdminPanel = ({onSendInfo}) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [image, setImage] = useState('')\r\n    \r\n    \r\n\r\n    if(firebase.getCurrentUserUid() === 'yt22jtNlWVhf0sWJcAR3ElKHcst2') {\r\n        //admin logged in\r\n        return (\r\n            <div className=\"admin-page\">\r\n            <form \r\n            className=\"form\"\r\n            onSubmit = {e => e.preventDefault() && false}>\r\n                <legend>Введите данные для добавления нового товара</legend>\r\n            <label>\r\n                <div>Название</div>\r\n                <input id=\"name\" name=\"name\" type=\"text\" autoComplete=\"off\" autoFocus value={name} onChange={((e) => setName(e.target.value))}/>\r\n            </label>\r\n            <label>\r\n                <div>Цвет</div>\r\n                <input id=\"color\" name=\"color\" type=\"text\" autoComplete=\"off\"  value={color} onChange={((e) => setColor(e.target.value))}/>\r\n            </label>\r\n            <label>\r\n                <div>Цена за метр</div>\r\n                <input id=\"price\" name=\"price\" type=\"number\" autoComplete=\"off\"  value={price} onChange={((e) => setPrice(e.target.value))}/>\r\n            </label>\r\n            <label>\r\n                <div>Картинка</div>\r\n                <input id=\"image\" name=\"image\" type=\"file\" autoComplete=\"off\"  onChange={((e) => setImage(e.target.files[0]))}autoFocus />\r\n            </label>\r\n            <button \r\n            className=\"form-button btn btn-secondary\"\r\n            type=\"submit\"\r\n            onClick={() => onSendInfo(name, color, price, image)}\r\n            >Добавить\r\n            </button>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n    \r\n}\r\nexport default AdminPanel","import React, {Component} from 'react'\nimport FrameListItem from '../frame-list-item/'\nimport ErrorIndicator from '../error-indicator'\nimport {connect} from 'react-redux'\nimport './frame-list.css'\nimport {withFrameStoreService} from '../hoc'\nimport * as actions from '../../actions'\nimport {compose} from '../../utils'\nimport Spinner from '../spinner'\nimport firebase from '../firebase'\nimport AdminPanel from '../admin-panel/'\nimport { bindActionCreators } from 'redux'\n\nconst FrameList = ({frames, widthChanged, heightChanged, onAddedToCart, onRemoveItem, onSendInfo}) => {\n\n    const adminPanel = firebase.getCurrentUserUid() === 'yt22jtNlWVhf0sWJcAR3ElKHcst2' ? <AdminPanel onSendInfo={onSendInfo}/> : null\n    \n        return (\n            <div>\n                {adminPanel}\n            <ul className=\"frame-list\">\n                {\n                    frames.map((frame) => {\n                        return (\n                            <li key={frame.key}><FrameListItem \n                            frame={frame} \n                            widthChanged={(e) => widthChanged(frame.id, Number(e.target.value))}\n                            heightChanged={(e) => heightChanged(frame.id, Number(e.target.value))}\n                            onAddedToCart={() => onAddedToCart(frame.id)}\n                            onRemoveItem={() => onRemoveItem(frame.key)}/></li>\n                        )\n                    })\n                }\n            </ul>\n            \n            </div>\n        )\n    \n}\nclass FrameListContainer extends Component {\n\n    \n    componentDidMount() {\n        this.props.fetchFrames();        \n    }\n\n \n    render() {\n        const onSendInfo = (name, color, price, image) => {\n            firebase.sendImage(image).then(() => firebase.SendInfo(name, color, price, image.name)).then(() => this.props.fetchFrames())\n        }\n        const onRemoveItem = (id) => {\n            firebase.removeItem(id).then(() => this.props.fetchFrames())\n        }\n        const {frames, loading, error, widthChanged, heightChanged, onAddedToCart} = this.props;\n        \n        if(loading) {\n            return(\n                <Spinner/>\n            )\n        }\n        if (error) {\n            return <ErrorIndicator/>\n        }\n        return (\n           <FrameList frames={frames} widthChanged={widthChanged} heightChanged={heightChanged} onAddedToCart={onAddedToCart} onRemoveItem={onRemoveItem} onSendInfo={onSendInfo}/>\n        )\n    }\n}\n\n\nconst mapStateToProps = ( {frameList: {frames, loading, error}}) => {\n    return{frames, loading, error}\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    const {frameStoreService} = ownProps;\n    const {framesRequested, framesLoaded, framesError, widthChanged, heightChanged, frameAddedToCart} = bindActionCreators(actions, dispatch)\n    \n    return{\n        fetchFrames: () => {\n            framesRequested();\n            frameStoreService.getFrames()\n            .then((data) => framesLoaded(data))\n            .catch((err) => framesError(err)) \n        },\n        widthChanged,\n        heightChanged,\n        onAddedToCart: frameAddedToCart\n    }\n    \n}\n\nexport default compose(\n    withFrameStoreService(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(FrameListContainer)\n\n\n","import FrameList from './frame-list'\r\nexport default FrameList","import React, { Component } from 'react'\r\nimport FrameList from '../frame-list'\r\n\r\n\r\n\r\nexport default class HomePage extends Component { \r\n    render() {\r\n        return (\r\n            <div>\r\n                <FrameList />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport './shopping-cart-table.css'\nimport firebase from '../firebase'\nimport {connect} from 'react-redux'\nimport {withRouter, Link} from 'react-router-dom'\nimport {frameDeletedfromCart, allFramesDeletedfromCart, frameAddedToCart, clearCart} from '../../actions/'\n\nconst ShoppingCartTable = ({items, total, onIncrease, onDecrease, onDelete,onClear, history}) => {\n    const userEmail = firebase.getCurrentUserEmail(),\n          userName = firebase.getCurrentUsername()\n    \n\n    const [phone, setPhone] = useState('')\n\n    useEffect(() => {\n        firebase.getCurrentUserPhone().then(val => {\n            if(val) {\n                setPhone(val)\n            }\n            else {\n                setPhone('Не указан')\n            }\n            \n        })\n    })\n\n    const sendOrder = () => {\n        if(items.length >= 1) {\n            firebase.sendOrder(userName, userEmail, items, total, phone)\n            onClear()\n            history.replace('/success')\n        }\n    }\n\n    const renderRow = (item, idx) => {\n        const {id, name, width, height, count, total} = item;\n                        return (\n                            <tr key={id}>\n                                <td>{idx + 1}</td>\n                                <td>{name}</td>\n                                <td>{width}</td>\n                                <td>{height}</td>\n                                <td>{count}</td>\n                                <td>{total} Р.</td>\n                                <td>\n                                    <button \n                                    className=\"btn btn-outline-danger btn-sm\"\n                                    onClick = {() => onDelete(id)}>\n                                        <i className=\"fa fa-trash-o\"/>\n                                    </button>\n                                    <button \n                                    className=\"btn btn-outline-success btn-sm\"\n                                    onClick = {() => onIncrease(id)}>\n                                        <i className=\"fa fa-plus-circle\"/>\n                                    </button>\n                                    <button \n                                    className=\"btn btn-outline-warning btn-sm\"\n                                    onClick = {() => onDecrease(id)}>\n                                        <i className=\"fa fa-minus-circle\"/>\n                                    </button>\n                                </td>\n                            </tr>\n                        )\n    }\n    if(!firebase.getCurrentUsername()) {\n        return(\n            <div className=\"shopping-cart-table\">\n                <h2>Ваш заказ</h2>\n                <table className=\"table table-responsive-sm\">\n                    <thead>\n                        <tr>\n                        <th>#</th>\n                        <th>Предмет</th>\n                        <th>Ширина</th>\n                        <th>Высота</th>\n                        <th>Количество</th>\n                        <th>Цена</th>\n                        <th>Действие</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        \n                        {items.map(renderRow)}\n                        \n                    </tbody>\n                </table>\n                <Link className=\"btn btn-secondary btn-large\"\n                to=\"/login\">Заказать</Link>\n                \n                <div className=\"total\">\n                    Сумма: {total} Р.\n                </div>\n                \n                <Link className=\"\"\n                to=\"/re-store\">\n                    <i className=\"icon fa fa-arrow-left\"></i>\n                    Назад к товарам</Link> \n            </div>\n        )\n    }\n    return(\n        <div className=\"shopping-cart-table\">\n            <h2>Ваш заказ</h2>\n            <table className=\"table table-responsive-sm\">\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Предмет</th>\n                    <th>Ширина</th>\n                    <th>Высота</th>\n                    <th>Количество</th>\n                    <th>Цена</th>\n                    <th>Действие</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                    {items.map(renderRow)}\n                    \n                </tbody>\n            </table>\n            <button className=\"btn btn-secondary btn-large\"\n            type=\"submit\"\n            onClick={sendOrder}>Заказать</button>\n            \n            <div className=\"total\">\n                Сумма: {total} Р.\n            </div>\n            <Link className=\"\"\n                to=\"/re-store\">\n                    <i className=\"icon fa fa-arrow-left\"></i>\n                    Назад к товарам</Link>\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = ({shoppingCart :{cartItems, orderTotal}}) => {\n    return {\n        items: cartItems,\n        total: orderTotal\n    }\n}\nconst mapDispatchToProps = {\n        onIncrease: frameAddedToCart,\n        onDecrease: frameDeletedfromCart,\n        onDelete: allFramesDeletedfromCart,\n        onClear: clearCart\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable))","import ShoppingCartTable from './shopping-cart-table'\r\nexport default ShoppingCartTable","import React from 'react'\r\nimport ShoppingCartTable from '../shopping-cart-table'\r\nimport firebase from '../firebase/'\r\nconst CartPage = () => {\r\n    if(!firebase.getCurrentUsername()) {\r\n        //not logged in\r\n        return (\r\n            <ShoppingCartTable/>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Здравствуйте, {firebase.getCurrentUsername()}</h2>\r\n            <ShoppingCartTable/>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default CartPage","import React, {useState} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport './pages.css'\r\nimport firebase from '../firebase'\r\nimport Spinner from '../spinner'\r\nconst LoginPage = (props) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [formClass, setFormClass] = useState('form')\r\n    const [loading, setLoading] = useState(false)\r\n    if(loading) {\r\n        return <Spinner/>\r\n    }\r\n    return (\r\n        <div className=\"login-page\">\r\n            <h2 className=\"form-header\">Вход</h2>\r\n            <form \r\n            className={formClass}\r\n            onSubmit = {e => e.preventDefault() && false}>\r\n                <label className=\"form-field\">\r\n                    <div>E-mail</div>\r\n                    <input id=\"e-mail\" name=\"e-mail\" autoComplete=\"off\" autoFocus type=\"text\" value={email} onChange={((e) => setEmail(e.target.value))} placeholder=\"user@mail.ru\"/>\r\n                </label>\r\n                <label className=\"form-field\">\r\n                    <div>Пароль</div>\r\n                    <input id=\"password\" name=\"password\" autoComplete=\"off\" type=\"password\" value={password} onChange={((e) => setPassword(e.target.value))} />\r\n                </label>\r\n                <div className=\"form-field\">\r\n                <button \r\n                className=\"btn btn-secondary\"\r\n                type=\"button\"\r\n                onClick={login}\r\n                >Войти\r\n                </button>\r\n                <Link to=\"/reset\" className=\"form-button\">Забыли пароль?</Link>\r\n                <Link to=\"/register\" className=\"form-button\">Зарегистрироваться</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n    async function showError(){\r\n        return new Promise((resolve, reject) => {\r\n            resolve(setFormClass('form wrong-data'))\r\n        })\r\n    }\r\n    async function login() {\r\n        try {\r\n            setLoading(true)\r\n            await firebase.login(email, password).then(() => setLoading(false))\r\n            props.history.replace('/cart')\r\n\r\n        } catch(err) {\r\n            await showError(err).then(() => {\r\n                setTimeout(() => {\r\n                    if(err.code === \"auth/invalid-email\"){\r\n                        alert('Введите корректный e-mail')\r\n                    }\r\n                    else{\r\n                        alert('Неверный пароль или такого пользователя не существует')\r\n                    }\r\n                }, 100)\r\n            })\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginPage)","import React, {useState} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport './pages.css'\r\nimport firebase from '../firebase'\r\nimport Spinner from '../spinner'\r\nconst RegisterPage = (props) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [formClass, setFormClass] = useState('form')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    if(loading) {\r\n        return <Spinner/>\r\n    }\r\n    return (\r\n        <div className=\"login-page\">\r\n        <h2 className=\"form-header\">Регистрация</h2>\r\n        <form \r\n        className={formClass}\r\n        onSubmit = {e => e.preventDefault() && false}>\r\n            <label className=\"form-field\">\r\n                <div>Имя</div>\r\n                <input id=\"name\" name=\"name\" autoComplete=\"off\" autoFocus value={name} onChange={((e) => setName(e.target.value))} required placeholder=\"Иван\"/>\r\n            </label>\r\n            <label className=\"form-field\">\r\n                <div>Телефон</div>\r\n                <input id=\"phone\" name=\"phone\" autoComplete=\"off\"  value={phone} onChange={((e) => setPhone(e.target.value))} required placeholder=\"89968889977\"/>\r\n            </label>\r\n            <label className=\"form-field\">\r\n                <div>E-mail</div>\r\n                <input id=\"e-mail\" name=\"e-mail\" autoComplete=\"off\" value={email} onChange={((e) => setEmail(e.target.value))} required placeholder=\"user@mail.ru\"/>\r\n            </label>\r\n            <label className=\"form-field\">\r\n                <div>Пароль</div>\r\n                <input id=\"password\" name=\"password\" autoComplete=\"off\" value={password} onChange={((e) => setPassword(e.target.value))} required/>\r\n            </label>\r\n            <div className=\"form-field\">\r\n            <button \r\n            className=\"btn btn-secondary\"\r\n            type=\"button\"\r\n            onClick={onRegister}\r\n            >Зарегистрироваться\r\n            </button>\r\n            <Link to=\"/login\" className=\"form-button\">Войти</Link>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )\r\n\r\n\r\n    async function showError(){\r\n        return new Promise((resolve, reject) => {\r\n            resolve(setFormClass('form wrong-data'))\r\n        })\r\n    }\r\n\r\n    async function onRegister() {\r\n        if(name.length>=1 && phone.length === 11) {\r\n            try {\r\n                setLoading(true)\r\n                await firebase.register(name, email, password)\r\n                await firebase.setPhone(phone)\r\n                await firebase.sendVerification().then(() => setLoading(false))\r\n                props.history.replace('/cart')\r\n            } catch (err) {\r\n                await showError(err).then(() => {\r\n                    setTimeout(() => {\r\n                        if(err.code === \"auth/invalid-email\"){\r\n                            alert('Введите корректный e-mail')\r\n                        } else if (err.code === \"auth/weak-password\") {\r\n                            alert('Пароль должен содержать больше 6 символов')\r\n                        }\r\n                    }, 100)\r\n                })\r\n            }\r\n        }\r\n        if(phone.length !== 11) {\r\n            alert('Введите номер телефона в формате 89277668899')\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default withRouter(RegisterPage)","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nconst SuccessPage = () => {\r\n    return (\r\n        <div>\r\n        <h2>Заказ успешно отправлен</h2>\r\n                <Link className=\"\"\r\n                    to=\"/re-store\">\r\n                    <i className=\"icon fa fa-arrow-left\"></i>\r\n                    Назад к товарам</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessPage","import React, { Component } from 'react'\r\nimport firebase from '../firebase'\r\nimport {Link} from 'react-router-dom'\r\nimport Spinner from '../spinner'\r\n\r\nexport default class OrdersPage extends Component{\r\n    onDelete = (key) => {\r\n        firebase.removeOrder(key).then(() => this.setState({loading: true})).then(() => firebase.getOrders().then(orders => this.setState({orders: orders, loading: false})))\r\n    }\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n    componentDidMount() {\r\n        firebase.getOrders().then(orders => this.setState({orders: orders, loading: false}))\r\n    }\r\n    renderItems = (item) => {\r\n        let key = item.id*item.width*item.height*item.price*Math.floor(Math.random() * 1000)\r\n        return (\r\n            <table key = {key+ 1}>\r\n                <thead>\r\n                        <tr>\r\n                            <th>Название</th>\r\n                            <th>Ширина</th>\r\n                            <th>Высота</th>\r\n                            <th>Количеcтво</th>\r\n                            <th>Стоимость</th>\r\n                        </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr key={key}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.width}</td>\r\n                        <td>{item.height}</td>\r\n                        <td>{item.count}</td>\r\n                        <td>{item.total}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n    renderRow = (item) => {\r\n        const {key, name, email, order, total , phone = \"Не указан\"} = item;\r\n        \r\n                        return (\r\n                            <tr key={key}>\r\n                                <td>{name}</td>\r\n                                <td>{email}</td>\r\n                                <td>{phone}</td>\r\n                                <td>{order.map(this.renderItems)}</td>\r\n                                <td>{total}</td>\r\n                                <td><button \r\n                                onClick = {() => this.onDelete(key)} className=\"btn btn-secondary\">Удалить</button></td>\r\n                            </tr>\r\n                        )\r\n    }\r\n\r\nrender() {\r\n    const orders = this.state.orders\r\n    if(this.state.loading) {\r\n        return (\r\n            <Spinner/>\r\n        )\r\n    }\r\n    if(firebase.getCurrentUserUid() === 'yt22jtNlWVhf0sWJcAR3ElKHcst2') {\r\n        return (\r\n            <table className=\"table table-responsive-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Имя</th>\r\n                            <th>E-mail</th>\r\n                            <th>Телефон</th>\r\n                            <th>Заказ</th>\r\n                            <th>Сумма</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                            {orders.map(this.renderRow)}\r\n                            \r\n                        </tbody>\r\n                    </table>\r\n            \r\n        )\r\n    }\r\n    return (\r\n        <Link to=\"login\" className=\"btn btn-primary btn-large\">Залогиниться</Link>\r\n        \r\n    )\r\n}\r\n    \r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport firebase from '../firebase'\r\n\r\nconst ResetPage = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [header, setHeader] = useState('Восстановить пароль')\r\n    async function resetPassword(email) {\r\n        await firebase.resetPassword(email).then(() => setHeader('Сообщение отправлено на e-mail'))\r\n    }\r\n    return (\r\n        <div className=\"login-page\">\r\n            <h2 className=\"form-header\">{header}</h2>\r\n            <form \r\n            className=\"form\"\r\n            onSubmit = {e => e.preventDefault() && false}>\r\n                <label className=\"form-field\">\r\n                    <div>E-mail</div>\r\n                    <input id=\"e-mail\" name=\"e-mail\" autoComplete=\"off\" autoFocus value={email} onChange={((e) => setEmail(e.target.value))} />\r\n                </label>\r\n                <div className=\"form-field\">\r\n                <button \r\n                className=\"btn btn-secondary\"\r\n                type=\"submit\"\r\n                onClick={() => resetPassword(email)}\r\n                >Восстановить\r\n                </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPage","import ShopHeader from './shop-header'\r\nexport default ShopHeader","import React from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport './shop-header.css'\r\nimport firebase from '../firebase'\r\n\r\nconst ShopHeader = (props) => {\r\n    const {numItems, total} = props \r\n\r\n    let controlButtons = null\r\n    if(!firebase.getCurrentUsername()) {\r\n        controlButtons = <div className=\"additional-pages\">\r\n                            <Link to=\"/login\">\r\n                            <i className=\"icon fa fa-sign-in\"></i>\r\n                                Войти</Link>\r\n                            <Link to=\"/register\">\r\n                                <i className=\"icon fa fa-unlock\"></i>\r\n                                Зарегистрироваться</Link>\r\n                        </div>\r\n    } else if (firebase.getCurrentUserUid() === 'yt22jtNlWVhf0sWJcAR3ElKHcst2') {\r\n        controlButtons = <div className=\"additional-pages\">\r\n                            <Link to=\"/orders\">\r\n                            <i className=\"icon fa fa-list-alt\"></i>\r\n                                Заказы</Link>\r\n                            <button className=\"logout\" onClick={logout} type=\"submit\">\r\n                            <i className=\"icon fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                                Выйти</button>\r\n                         </div>\r\n    } else {\r\n        controlButtons = <div className=\"additional-pages\">\r\n                            <button className=\"logout\" onClick={logout} type=\"submit\">\r\n                            <i className=\"icon fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                                Выйти</button>\r\n                        </div>\r\n    }\r\n    return(\r\n        <header className=\"shop-header row\">\r\n            <Link className=\"logo text-dark\" to=\"/re-store\">FrameStore</Link>\r\n            <Link to=\"/cart\" className=\"shopping-cart\">\r\n                <i className=\"icon fa fa-shopping-cart\"/>\r\n                {numItems} Предметов ({total} Р.)\r\n            </Link>\r\n            {controlButtons}\r\n        </header>\r\n    )\r\n    async function logout() {\r\n        await firebase.logout()\r\n        props.history.push('/re-store')\r\n    }\r\n}\r\nexport default withRouter(ShopHeader)","import App from './app'\r\nexport default App","import React, {useState, useEffect} from 'react'\r\nimport ErrorBoundary from '../error-boundary/'\r\nimport { Route, Switch} from 'react-router-dom'\r\nimport {HomePage, CartPage, LoginPage, RegisterPage, SuccessPage, OrdersPage, ResetPage} from '../pages/'\r\nimport ShopHeader from '../shop-header'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../spinner'\r\nimport firebase from '../firebase'\r\nimport './app.css'\r\nconst App = ({orderTotal, cartItemsTotal}) =>{\r\n\r\n    const [firebaseInitialized, setFirebaseInitialized] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.isInitialized().then(val => {\r\n            setFirebaseInitialized(val)\r\n        })\r\n    })\r\n\r\n\r\n        return firebaseInitialized !== false ? (\r\n            <main role=\"main\" className=\"container\">\r\n            <ShopHeader numItems={cartItemsTotal} total={orderTotal}/>\r\n            <ErrorBoundary>\r\n                <div className=\"content\">\r\n                <Switch>\r\n                    <Route path=\"/re-store\" component={HomePage}/>\r\n                    <Route path=\"/cart\" component={CartPage}/>\r\n                    <Route path=\"/login\" component={LoginPage}/>\r\n                    <Route path=\"/register\" component={RegisterPage}/>\r\n                    <Route path=\"/success\" component={SuccessPage}/>\r\n                    <Route path=\"/orders\" component={OrdersPage}/>\r\n                    <Route path=\"/reset\" component={ResetPage}/>\r\n                </Switch>\r\n                </div>  \r\n            </ErrorBoundary>\r\n            </main>\r\n        ) : <Spinner/>   \r\n}\r\nconst mapStateToProps = ( {shoppingCart: {orderTotal, cartItemsTotal}}) => {\r\n    return{orderTotal, cartItemsTotal}\r\n}\r\nexport default connect(mapStateToProps)(App)","import firebase from '../components/firebase/'\nexport default class FrameStoreService {\n    \n\n    getFrames() {\n         \n        return firebase.getFrames()\n    }\n}","const updateFrameList = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            frames: [],\r\n            loading: true,\r\n            error: null,\r\n        }\r\n    }  \r\n    const frameId = action.payload\r\n    const itemIndex = state.frameList.frames.findIndex(({id}) => id === frameId)\r\n    const item = state.frameList.frames[itemIndex];\r\n    const height = action.height\r\n    const width = action.width\r\n\r\n    \r\n    switch(action.type) {\r\n        case 'FETCH_FRAMES_REQUEST':\r\n            return {\r\n                frames: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_FRAMES_SUCCESS':\r\n            return {\r\n                frames: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRAMES_FAILURE': \r\n            return {\r\n                frames: [],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case 'HEIGHT_UPDATE':\r\n            let newItemHeight = {\r\n                ...item,\r\n                height: height,\r\n                id: item.id+1000\r\n            }\r\n            let newFramesHeight = [\r\n                ...state.frameList.frames.slice(0, itemIndex),\r\n                newItemHeight,\r\n                ...state.frameList.frames.slice(itemIndex + 1)\r\n            ]\r\n            \r\n        return {\r\n                frames: newFramesHeight\r\n        }\r\n        case 'WIDTH_UPDATE':\r\n            let newItemWidth = {\r\n                ...item,\r\n                width: width,\r\n                id: item.id+1000\r\n            }\r\n            let newFramesWidth = [\r\n                ...state.frameList.frames.slice(0, itemIndex),\r\n                newItemWidth,\r\n                ...state.frameList.frames.slice(itemIndex + 1)\r\n            ]\r\n            \r\n            return {\r\n                frames: newFramesWidth\r\n            }\r\n        default:\r\n            return state.frameList;\r\n    }\r\n}\r\n\r\nexport default updateFrameList","const updateCartItems = (cartItems, item, idx) => {\r\n    if(item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1)\r\n        ]\r\n    } \r\n    if(idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ]\r\n    } else {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            item,\r\n            ...cartItems.slice(idx + 1)\r\n        ]\r\n    }\r\n}\r\nconst updateCartItem = (frame, cartItem, quantity) => {\r\n    if(cartItem) {\r\n        return {\r\n            ...cartItem,\r\n            count: cartItem.count + quantity,\r\n            total: cartItem.total + quantity*Math.round(cartItem.width*cartItem.height*cartItem.price/100)\r\n        };\r\n\r\n    } else {\r\n        return {\r\n            id: frame.id,\r\n            name: frame.name,\r\n            count: 1,\r\n            width: frame.width,\r\n            height: frame.height,\r\n            total: Math.round(frame.width*frame.height*frame.price/100),\r\n            price: frame.price\r\n        };  \r\n    }\r\n}\r\nconst updateOrder = (state, frameId, quantity) => {\r\n    const {frameList: {frames},shoppingCart: {cartItems}} = state\r\n    const frame = frames.find((frame) => frame.id === frameId)\r\n    const cartItemIndex = cartItems.findIndex(({id}) => id === frameId)\r\n    const cartItem = cartItems[cartItemIndex]\r\n    \r\n    const newItem = updateCartItem(frame, cartItem, quantity)\r\n    const newCartItems = updateCartItems(cartItems, newItem, cartItemIndex)\r\n    const orderTotal = Object.values(newCartItems).reduce((t, {total}) => t + total, 0)\r\n    const cartItemsTotal = Object.values(newCartItems).reduce((t, {count}) => t + count, 0)\r\n        return {\r\n        orderTotal: orderTotal,\r\n        cartItems: newCartItems,\r\n        cartItemsTotal: cartItemsTotal\r\n        }\r\n}\r\n\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0,\r\n            cartItemsTotal: 0\r\n        }\r\n    }\r\n    switch(action.type) {\r\n        case 'FRAME_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1)\r\n           \r\n        case 'FRAME_DELETED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1)\r\n        case 'ALL_FRAMES_DELETED_FROM_CART':\r\n            const itemToDelete = state.shoppingCart.cartItems.find(({id}) => id === action.payload)\r\n            return updateOrder(state, action.payload, -itemToDelete.count)\r\n        case 'CLEAR_CART':\r\n            return {\r\n                orderTotal: 0,\r\n                cartItems: [],\r\n                cartItemsTotal: 0\r\n            }\r\n        default:\r\n            return state.shoppingCart;\r\n     }\r\n}\r\nexport default updateShoppingCart","import updateFrameList from './frame-list'\nimport updateShoppingCart from './shopping-cart'\n\nconst reducer = (state, action) => {\n    return {\n        frameList: updateFrameList(state, action),\n        shoppingCart: updateShoppingCart(state, action),\n    }   \n}\n\nexport default reducer","import {createStore} from 'redux'\r\n\r\nimport reducer from './reducers'\r\n\r\n\r\nconst store = createStore(reducer)\r\n\r\n\r\nexport default store;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport App from './components/app/';\nimport ErrorBoundary from './components/error-boundary/';\nimport FrameStoreService from './services/frame-store-service';\nimport {FrameStoreServiceProvider} from './components/frame-store-service-context';\nimport store from './store'\n\nconst frameStoreService = new FrameStoreService();\n\nReactDOM.render(\n<Provider store = {store}>\n    <ErrorBoundary>\n        <FrameStoreServiceProvider value={frameStoreService}>\n            <Router>\n                <App/>\n            </Router>\n        </FrameStoreServiceProvider>\n    </ErrorBoundary>\n</Provider>,\n document.getElementById('root'))\n\n"],"sourceRoot":""}