{"version":3,"sources":["components/error-indicator/error-picture.png","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/frame-list-item/index.js","components/frame-list-item/frame-list-item.js","components/frame-store-service-context/frame-store-service-context.js","components/hoc/with-frame-store-service.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/frame-list/frame-list.js","components/frame-list/index.js","components/pages/home-page.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/firebase/firebase.js","components/firebase/index.js","components/pages/cart-page.js","components/pages/login-page.js","components/pages/register-page.js","components/shop-header/index.js","components/shop-header/shop-header.js","components/app/index.js","components/app/app.js","services/frame-store-service.js","reducers/frame-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["module","exports","ErrorIndicator","className","src","icon","alt","width","ErrorBoundary","state","hasError","this","setState","props","children","Component","FrameListItem","frame","widthChanged","heightChanged","onAddedToCart","name","color","image","price","height","cost","Math","round","href","type","min","minLength","defaultValue","onChange","onClick","React","createContext","FrameStoreServiceProvider","Provider","FrameStoreServiceConsumer","Consumer","withFrameStoreService","Wrapped","frameStoreService","framesLoaded","newFrames","payload","framesRequested","id","framesError","error","frameAddedToCart","frameId","frameDeletedfromCart","allFramesDeletedfromCart","compose","funcs","comp","reduceRight","wrapped","f","Spinner","FrameList","frames","map","key","e","Number","target","value","FrameListContainer","fetchFrames","loading","connect","frameList","dispatch","ownProps","bindActionCreators","actions","getFrames","then","data","catch","err","HomePage","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","shoppingCart","items","cartItems","total","orderTotal","item","idx","count","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","app","initializeApp","auth","db","firestore","email","password","signInWithEmailAndPassword","signOut","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","Promise","resolve","onAuthStateChanged","CartPage","firebase","getCurrentUsername","withRouter","useState","setEmail","setPassword","formClass","setFormClass","onSubmit","preventDefault","autoComplete","autoFocus","to","a","login","history","replace","code","setName","register","alert","message","ShopHeader","numItems","logout","push","App","cartItemsTotal","firebaseInitialized","setFirebaseInitialized","useEffect","isInitialized","val","role","path","component","exact","LoginPage","RegisterPage","FrameStoreService","collection","get","querySnapshot","forEach","doc","updateFrameList","action","undefined","itemIndex","findIndex","newItemHeight","slice","newItemWidth","updateOrder","quantity","find","cartItemIndex","newCartItems","updateCartItems","cartItem","updateCartItem","Object","values","reduce","t","updateShoppingCart","itemToDelete","reducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1351a22f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error-picture.362c250b.png\";","import ErrorIndicator from './error-indicator'\r\nexport default ErrorIndicator","import React from 'react';\r\nimport './error-indicator.css'\r\nimport icon from './error-picture.png';\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error-indicator\">\r\n            <img src={icon} alt=\"error-icon\" width=\"64\"/>\r\n            <span className=\"boom\">Извините<br/> У нас возникли технические трудности</span>\r\n            <span>Работа скоро будет восстановлена</span>\r\n        </div>\r\n    )\r\n}\r\nexport default ErrorIndicator;","import ErrorBoundary from './error-boundary'\r\nexport default ErrorBoundary","import React, {Component} from 'react'\r\nimport ErrorIndicator from '../error-indicator/'\r\n\r\nexport default class ErrorBoundary extends Component {\r\n    state ={\r\n        hasError: false\r\n    }\r\n        componentDidCatch() {\r\n            this.setState({hasError: true})    \r\n        }\r\n    \r\n        render() {\r\n            if(this.state.hasError) {\r\n                return <ErrorIndicator />\r\n            }\r\n            return this.props.children;\r\n        }\r\n}","import FrameListItem from './frame-list-item'\r\nexport default FrameListItem","import React from 'react'\nimport './frame-list-item.css'\n\nconst FrameListItem = ({frame, widthChanged, heightChanged, onAddedToCart}) => {\n    const {name, color, image, price, width, height} = frame\n\n    const cost = Math.round(width*height/100*price);\n    \n    return (\n        <div href=\"/\" className=\"frame-list-item\">\n            \n            <div className=\"frame-cover\">\n                <img src={image} alt=\"Рамка\" width=\"200\" height=\"200\"/>\n            </div>\n\n            <div className=\"frame-description\">\n                <h3 className=\"title\">{name}</h3> \n                <span>Цвет: {color}</span>\n                <span>Цена за метр: {price} рублей</span>\n                \n                    <label>\n                        <p>Ширина(cм):</p>\n                        <input type=\"number\" min=\"10\" minLength=\"2\" defaultValue={width} onChange={widthChanged}/>\n                    </label>\n\n                    <label >\n                        <p>Высота(cм):</p>\n                        <input type=\"number\" min=\"10\" minLength=\"2\" defaultValue={height} onChange={heightChanged}/>\n                    </label>\n                \n                <span>Цена: {cost}</span>\n                \n\n                <button \n                className=\"btn btn-info add-to-cart\"\n                onClick = {onAddedToCart}>Добавить в корзину</button>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default FrameListItem","import React from 'react'\r\n\r\nconst {\r\n    Provider : FrameStoreServiceProvider,\r\n    Consumer : FrameStoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    FrameStoreServiceProvider,\r\n    FrameStoreServiceConsumer\r\n}","import React from 'react'\r\nimport {FrameStoreServiceConsumer} from '../frame-store-service-context'\r\n\r\nconst withFrameStoreService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n        <FrameStoreServiceConsumer>\r\n            {\r\n                (frameStoreService) => {\r\n                    return (\r\n                        <Wrapped {...props} frameStoreService={frameStoreService}/>\r\n                    )\r\n                }\r\n            }\r\n        </FrameStoreServiceConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFrameStoreService","\nconst framesLoaded = (newFrames) => {\n    return {\n        type: 'FETCH_FRAMES_SUCCESS',\n        payload: newFrames\n    }\n}\nconst framesRequested = () => {\n    return {\n        type: 'FETCH_FRAMES_REQUEST'\n    }\n}\nconst widthChanged = (id, width) => {\n    \n    return {\n        type: 'WIDTH_UPDATE',\n        payload: id,\n        width: width,\n    }\n}\nconst heightChanged = (id, height) => {\n\n\n    return {\n        type: 'HEIGHT_UPDATE',\n        payload: id,\n        height: height,\n    }\n}\nconst framesError = (error) => {\n    return{\n        type: 'FRAMES_FAILURE',\n        payload: error\n    }\n}\nconst frameAddedToCart = (frameId) => {\n    return {\n        type: 'FRAME_ADDED_TO_CART',\n        payload: frameId\n    }\n}\nconst frameDeletedfromCart = (frameId) => {\n    return {\n        type: 'FRAME_DELETED_FROM_CART',\n        payload: frameId\n    }\n}\nconst allFramesDeletedfromCart = (frameId) => {\n    return {\n        type: 'ALL_FRAMES_DELETED_FROM_CART',\n        payload: frameId\n    }\n}\n\nexport {\n    framesLoaded,\n    framesRequested,\n    framesError,\n    widthChanged,\n    heightChanged,\n    frameAddedToCart,\n    frameDeletedfromCart,\n    allFramesDeletedfromCart\n}","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n}\r\nexport default compose","import Spinner from './spinner'\r\nexport default Spinner","import React from 'react'\r\n\r\nimport './spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-spinner-kwnefvytxq8 spinner\">\r\n            <div className=\"ldio-zqnhqhb31uk\">\r\n                <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\nimport FrameListItem from '../frame-list-item/'\nimport ErrorIndicator from '../error-indicator'\nimport {connect} from 'react-redux'\nimport './frame-list.css'\nimport {withFrameStoreService} from '../hoc'\nimport * as actions from '../../actions'\nimport {compose} from '../../utils'\nimport Spinner from '../spinner'\nimport { bindActionCreators } from 'redux'\n\nconst FrameList = ({frames, widthChanged, heightChanged, onAddedToCart}) => {\n    return (\n        <ul className=\"frame-list\">\n                {\n                    frames.map((frame) => {\n                        return (\n                            <li key={frame.key}><FrameListItem \n                            frame={frame} \n                            widthChanged={(e) => widthChanged(frame.id, Number(e.target.value))}\n                            heightChanged={(e) => heightChanged(frame.id, Number(e.target.value))}\n                            onAddedToCart={() => onAddedToCart(frame.id)}/></li>\n                        )\n                    })\n                }\n            </ul>\n    )\n}\nclass FrameListContainer extends Component {\n\n    \n    componentDidMount() {\n        this.props.fetchFrames();        \n    }\n\n \n    render() {\n        const {frames, loading, error, widthChanged, heightChanged, onAddedToCart} = this.props;\n        \n        if(loading) {\n            return(\n                <Spinner/>\n            )\n        }\n        if (error) {\n            return <ErrorIndicator/>\n        }\n        return (\n           <FrameList frames={frames} widthChanged={widthChanged} heightChanged={heightChanged} onAddedToCart={onAddedToCart}/>\n        )\n    }\n}\n\n\nconst mapStateToProps = ( {frameList: {frames, loading, error}}) => {\n    return{frames, loading, error}\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    const {frameStoreService} = ownProps;\n    const {framesRequested, framesLoaded, framesError, widthChanged, heightChanged, frameAddedToCart} = bindActionCreators(actions, dispatch)\n    \n    return{\n        fetchFrames: () => {\n            framesRequested();\n            frameStoreService.getFrames()\n            .then((data) => framesLoaded(data))\n            .catch((err) => framesError(err)) \n        },\n        widthChanged,\n        heightChanged,\n        onAddedToCart: frameAddedToCart\n    }\n    \n}\n\nexport default compose(\n    withFrameStoreService(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(FrameListContainer)\n\n\n","import FrameList from './frame-list'\r\nexport default FrameList","import React from 'react'\r\nimport FrameList from '../frame-list'\r\n\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <FrameList />\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default HomePage","import React from 'react'\nimport './shopping-cart-table.css'\nimport {connect} from 'react-redux'\nimport {frameDeletedfromCart, allFramesDeletedfromCart, frameAddedToCart} from '../../actions/'\n\nconst ShoppingCartTable = ({items, total, onIncrease, onDecrease, onDelete}) => {\n    const renderRow = (item, idx) => {\n        const {id, name, width, height, count, total} = item;\n                        return (\n                            <tr key={id}>\n                                <td>{idx + 1}</td>\n                                <td>{name}</td>\n                                <td>{width}</td>\n                                <td>{height}</td>\n                                <td>{count}</td>\n                                <td>{total} Р.</td>\n                                <td>\n                                    <button \n                                    className=\"btn btn-outline-danger btn-sm\"\n                                    onClick = {() => onDelete(id)}>\n                                        <i className=\"fa fa-trash-o\"/>\n                                    </button>\n                                    <button \n                                    className=\"btn btn-outline-success btn-sm\"\n                                    onClick = {() => onIncrease(id)}>\n                                        <i className=\"fa fa-plus-circle\"/>\n                                    </button>\n                                    <button \n                                    className=\"btn btn-outline-warning btn-sm\"\n                                    onClick = {() => onDecrease(id)}>\n                                        <i className=\"fa fa-minus-circle\"/>\n                                    </button>\n                                </td>\n                            </tr>\n                        )\n    }\n    return(\n        <div className=\"shopping-cart-table\">\n            <h2>Ваш заказ</h2>\n            <table className=\"table table-responsive-sm\">\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Предмет</th>\n                    <th>Ширина</th>\n                    <th>Высота</th>\n                    <th>Количество</th>\n                    <th>Цена</th>\n                    <th>Действие</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                    {items.map(renderRow)}\n                    \n                </tbody>\n            </table>\n            <div className=\"total\">\n                Сумма: {total} Р.\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({shoppingCart :{cartItems, orderTotal}}) => {\n    return {\n        items: cartItems,\n        total: orderTotal\n    }\n}\nconst mapDispatchToProps = {\n        onIncrease: frameAddedToCart,\n        onDecrease: frameDeletedfromCart,\n        onDelete: allFramesDeletedfromCart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable)","import ShoppingCartTable from './shopping-cart-table'\r\nexport default ShoppingCartTable","import app from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firebase-firestore'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDekXqW0APzDphPFRKCSID_MPSIbFO3HoI\",\r\n    authDomain: \"frameshop-6dc38.firebaseapp.com\",\r\n    databaseURL: \"https://frameshop-6dc38.firebaseio.com\",\r\n    projectId: \"frameshop-6dc38\",\r\n    storageBucket: \"frameshop-6dc38.appspot.com\",\r\n    messagingSenderId: \"1037245804641\",\r\n    appId: \"1:1037245804641:web:72132a092bff6e5cd5fa20\",\r\n    measurementId: \"G-8JGBKERKG6\"\r\n  };\r\n\r\n\r\n\r\n\r\n  class Firebase {\r\n      constructor () {\r\n        app.initializeApp(config)\r\n        this.auth = app.auth()\r\n        this.db = app.firestore()\r\n      }\r\n      login(email, password) {\r\n          return this.auth.signInWithEmailAndPassword(email, password)\r\n      }\r\n      logout() {\r\n          return this.auth.signOut()\r\n      }\r\n      async register(name, email, password) {\r\n          await this.auth.createUserWithEmailAndPassword(email, password)\r\n          return this.auth.currentUser.updateProfile({\r\n              displayName: name\r\n          })\r\n      }\r\n\r\n      isInitialized() {\r\n          return new Promise (resolve => {\r\n              this.auth.onAuthStateChanged(resolve)\r\n          })\r\n      }\r\n      getCurrentUsername() {\r\n            if(this.auth.currentUser)\r\n            return this.auth.currentUser.displayName\r\n      }\r\n  }\r\n\r\n  export default new Firebase()","import Firebase from './firebase'\r\nexport default Firebase","import React from 'react'\r\nimport ShoppingCartTable from '../shopping-cart-table'\r\nimport firebase from '../firebase/'\r\nconst CartPage = () => {\r\n    if(!firebase.getCurrentUsername()) {\r\n        //not logged in\r\n        return (\r\n            <ShoppingCartTable/>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Здравствуйте, {firebase.getCurrentUsername()}</h2>\r\n            <ShoppingCartTable/>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default CartPage","import React, {useState} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport './pages.css'\r\nimport firebase from '../firebase'\r\nconst LoginPage = (props) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [formClass, setFormClass] = useState('form')\r\n    return (\r\n        <div className=\"login-page\">\r\n            <h2 className=\"form-header\">Вход</h2>\r\n            <form \r\n            className={formClass}\r\n            onSubmit = {e => e.preventDefault() && false}>\r\n                <label className=\"form-field\">\r\n                    <div>E-mail</div>\r\n                    <input id=\"e-mail\" name=\"e-mail\" autoComplete=\"off\" autoFocus value={email} onChange={((e) => setEmail(e.target.value))} />\r\n                </label>\r\n                <label className=\"form-field\">\r\n                    <div>Пароль</div>\r\n                    <input id=\"password\" name=\"password\" autoComplete=\"off\" value={password} onChange={((e) => setPassword(e.target.value))}/>\r\n                </label>\r\n                <div className=\"form-field\">\r\n                <button \r\n                className=\"form-button\"\r\n                type=\"submit\"\r\n                onClick={login}\r\n                >Войти\r\n                </button>\r\n                <Link to=\"/register\" className=\"form-button\">Зарегистрироваться</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n    async function login() {\r\n        try {\r\n            await firebase.login(email, password)\r\n            props.history.replace('/cart')\r\n\r\n        } catch(err) {\r\n            if(err.code === \"auth/invalid-email\"){\r\n                setFormClass('form alert')\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginPage)","import React, {useState} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport './pages.css'\r\nimport firebase from '../firebase'\r\nconst RegisterPage = (props) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    return (\r\n        <div className=\"login-page\">\r\n        <h2 className=\"form-header\">Регистрация</h2>\r\n        <form \r\n        className=\"form\"\r\n        onSubmit = {e => e.preventDefault() && false}>\r\n            <label className=\"form-field\">\r\n                <div>Имя</div>\r\n                <input id=\"name\" name=\"name\" autoComplete=\"off\" autoFocus value={name} onChange={((e) => setName(e.target.value))}/>\r\n            </label>\r\n            <label className=\"form-field\">\r\n                <div>E-mail</div>\r\n                <input id=\"e-mail\" name=\"e-mail\" autoComplete=\"off\" value={email} onChange={((e) => setEmail(e.target.value))}/>\r\n            </label>\r\n            <label className=\"form-field\">\r\n                <div>Пароль</div>\r\n                <input id=\"password\" name=\"password\" autoComplete=\"off\" value={password} onChange={((e) => setPassword(e.target.value))}/>\r\n            </label>\r\n            <div className=\"form-field\">\r\n            <button \r\n            className=\"form-button\"\r\n            type=\"submit\"\r\n            onClick={onRegister}\r\n            >Зарегистрироваться\r\n            </button>\r\n            <Link to=\"/login\" className=\"form-button\">Войти</Link>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )\r\n\r\n    async function onRegister() {\r\n        try {\r\n            await firebase.register(name, email, password)\r\n            props.history.replace('/cart')\r\n        } catch (error) {\r\n            alert(error.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(RegisterPage)","import ShopHeader from './shop-header'\r\nexport default ShopHeader","import React from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport './shop-header.css'\r\nimport firebase from '../firebase'\r\n\r\nconst ShopHeader = (props) => {\r\n    const {numItems, total} = props\r\n    if(!firebase.getCurrentUsername()) {\r\n        //not logged in\r\n        return (\r\n            <header className=\"shop-header row\">\r\n            <Link className=\"logo text-dark\" to=\"/re-store\">ReStore</Link>\r\n            <Link to=\"/cart\" className=\"shopping-cart\">\r\n                <i className=\"cart-icon fa fa-shopping-cart\"/>\r\n                {numItems} Предметов ({total} Р.)\r\n            </Link>\r\n            <div className=\"additional-pages\">\r\n            <Link to=\"/login\">Войти</Link>\r\n            <Link to=\"/register\">Зарегистрироваться</Link>\r\n            </div>\r\n        </header>\r\n        )\r\n    }\r\n    return(\r\n        <header className=\"shop-header row\">\r\n            <Link className=\"logo text-dark\" to=\"/re-store\">ReStore</Link>\r\n            <Link to=\"/cart\" className=\"shopping-cart\">\r\n                <i className=\"cart-icon fa fa-shopping-cart\"/>\r\n                {numItems} Предметов ({total} Р.)\r\n            </Link>\r\n            <div className=\"additional-pages\">\r\n            <button className=\"logout\" onClick={logout} type=\"submit\">Выйти</button>\r\n            </div>\r\n        </header>\r\n    )\r\n    async function logout() {\r\n        await firebase.logout()\r\n        props.history.push('/re-store')\r\n    }\r\n}\r\nexport default withRouter(ShopHeader)","import App from './app'\r\nexport default App","import React, {useState, useEffect} from 'react'\r\nimport ErrorBoundary from '../error-boundary/'\r\nimport { Route, Switch} from 'react-router-dom'\r\nimport {HomePage, CartPage, LoginPage, RegisterPage} from '../pages/'\r\nimport ShopHeader from '../shop-header'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../spinner'\r\nimport firebase from '../firebase'\r\nconst App = ({orderTotal, cartItemsTotal}) =>{\r\n\r\n    const [firebaseInitialized, setFirebaseInitialized] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.isInitialized().then(val => {\r\n            setFirebaseInitialized(val)\r\n        })\r\n    })\r\n\r\n\r\n        return firebaseInitialized !== false ? (\r\n            <main role=\"main\" className=\"container\">\r\n            <ShopHeader numItems={cartItemsTotal} total={orderTotal}/>\r\n            <ErrorBoundary>\r\n                <Switch>\r\n                    <Route path=\"/re-store\" component={HomePage} exact/>\r\n                    <Route path=\"/cart\" component={CartPage}/>\r\n                    <Route path=\"/login\" component={LoginPage}/>\r\n                    <Route path=\"/register\" component={RegisterPage}/>\r\n                </Switch>  \r\n            </ErrorBoundary>\r\n            </main>\r\n        ) : <Spinner/>  \r\n}\r\nconst mapStateToProps = ( {shoppingCart: {orderTotal, cartItemsTotal}}) => {\r\n    return{orderTotal, cartItemsTotal}\r\n}\r\nexport default connect(mapStateToProps)(App)","import firebase from '../components/firebase/'\nexport default class FrameStoreService {\n    \n    // data = [\n    //     {key: 1, id: 1, name: 'Белоснежка Flora', color: 'Белый', price: 50, width:20, height:20, image: \"https://cdn1.regmarkets.ru/r1200/a665ca0d8f5f6319a69359dc91434019.jpg\"},\n    //     // {key: 2, id: 2, name: 'Белоснежка Ester', color: 'Серый', price: 100, width:20, height:20, image: \"https://cdn1.regmarkets.ru/r1200/a665ca0d8f5f6319a69359dc91434019.jpg\"},\n    //     // {key: 3, id: 3, name: 'Мосфа Тоскана', color: 'Коричневый', price: 150, width:20, height:20, image: \"https://static.regmarkets.ru/detail/images/87/db/87dbeeab523e2992376eada899585b4d.jpg\"},\n    //     // {key: 4, id: 4, name: 'Gamma', color: 'Коричневый', price: 200, width:20, height:20, image: \"https://static.regmarkets.ru/detail/images/b7/7c/b77c17a97669dc799e5877ce9d310693.jpg\"},\n    // ]\n    async getFrames() {   \n\n        return await firebase.db.collection(\"frames\").get().then((querySnapshot) => {\n            const data = []\n             querySnapshot.forEach((doc) => {\n                data.push(doc.data()) \n            });\n            return data\n        })\n        \n\n        \n        \n        \n        \n        // return new Promise((resolve, reject) => {\n        //         resolve(this.data)\n        //         reject(new Error('Server error'))\n        // })\n    }\n}","const updateFrameList = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            frames: [],\r\n            loading: true,\r\n            error: null,\r\n        }\r\n    }  \r\n    const frameId = action.payload\r\n    const itemIndex = state.frameList.frames.findIndex(({id}) => id === frameId)\r\n    const item = state.frameList.frames[itemIndex];\r\n    const height = action.height\r\n    const width = action.width\r\n\r\n    \r\n    switch(action.type) {\r\n        case 'FETCH_FRAMES_REQUEST':\r\n            return {\r\n                frames: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_FRAMES_SUCCESS':\r\n            return {\r\n                frames: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRAMES_FAILURE': \r\n            return {\r\n                frames: [],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case 'HEIGHT_UPDATE':\r\n            let newItemHeight = {\r\n                ...item,\r\n                height: height,\r\n                id: item.id+1000\r\n            }\r\n            let newFramesHeight = [\r\n                ...state.frameList.frames.slice(0, itemIndex),\r\n                newItemHeight,\r\n                ...state.frameList.frames.slice(itemIndex + 1)\r\n            ]\r\n            \r\n        return {\r\n                frames: newFramesHeight\r\n        }\r\n        case 'WIDTH_UPDATE':\r\n            let newItemWidth = {\r\n                ...item,\r\n                width: width,\r\n                id: item.id+1000\r\n            }\r\n            let newFramesWidth = [\r\n                ...state.frameList.frames.slice(0, itemIndex),\r\n                newItemWidth,\r\n                ...state.frameList.frames.slice(itemIndex + 1)\r\n            ]\r\n            \r\n            return {\r\n                frames: newFramesWidth\r\n            }\r\n        default:\r\n            return state.frameList;\r\n    }\r\n}\r\n\r\nexport default updateFrameList","const updateCartItems = (cartItems, item, idx) => {\r\n    if(item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1)\r\n        ]\r\n    } \r\n    if(idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ]\r\n    } else {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            item,\r\n            ...cartItems.slice(idx + 1)\r\n        ]\r\n    }\r\n}\r\nconst updateCartItem = (frame, cartItem, quantity) => {\r\n    if(cartItem) {\r\n        return {\r\n            ...cartItem,\r\n            count: cartItem.count + quantity,\r\n            total: cartItem.total + quantity*Math.round(cartItem.width*cartItem.height*cartItem.price/100)\r\n        };\r\n\r\n    } else {\r\n        return {\r\n            id: frame.id,\r\n            name: frame.name,\r\n            count: 1,\r\n            width: frame.width,\r\n            height: frame.height,\r\n            total: Math.round(frame.width*frame.height*frame.price/100),\r\n            price: frame.price\r\n        };  \r\n    }\r\n}\r\nconst updateOrder = (state, frameId, quantity) => {\r\n    const {frameList: {frames},shoppingCart: {cartItems}} = state\r\n    const frame = frames.find((frame) => frame.id === frameId)\r\n    const cartItemIndex = cartItems.findIndex(({id}) => id === frameId)\r\n    const cartItem = cartItems[cartItemIndex]\r\n    \r\n    const newItem = updateCartItem(frame, cartItem, quantity)\r\n    const newCartItems = updateCartItems(cartItems, newItem, cartItemIndex)\r\n    const orderTotal = Object.values(newCartItems).reduce((t, {total}) => t + total, 0)\r\n    const cartItemsTotal = Object.values(newCartItems).reduce((t, {count}) => t + count, 0)\r\n        return {\r\n        orderTotal: orderTotal,\r\n        cartItems: newCartItems,\r\n        cartItemsTotal: cartItemsTotal\r\n        }\r\n}\r\n\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0,\r\n            cartItemsTotal: 0\r\n        }\r\n    }\r\n    switch(action.type) {\r\n        case 'FRAME_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1)\r\n           \r\n        case 'FRAME_DELETED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1)\r\n        case 'ALL_FRAMES_DELETED_FROM_CART':\r\n            const itemToDelete = state.shoppingCart.cartItems.find(({id}) => id === action.payload)\r\n            return updateOrder(state, action.payload, -itemToDelete.count)\r\n        default:\r\n            return state.shoppingCart;\r\n     }\r\n}\r\nexport default updateShoppingCart","import updateFrameList from './frame-list'\nimport updateShoppingCart from './shopping-cart'\n\nconst reducer = (state, action) => {\n    return {\n        frameList: updateFrameList(state, action),\n        shoppingCart: updateShoppingCart(state, action),\n    }   \n}\n\nexport default reducer","import {createStore} from 'redux'\r\n\r\nimport reducer from './reducers'\r\n\r\n\r\nconst store = createStore(reducer)\r\n\r\n\r\nexport default store;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport App from './components/app/';\nimport ErrorBoundary from './components/error-boundary/';\nimport FrameStoreService from './services/frame-store-service';\nimport {FrameStoreServiceProvider} from './components/frame-store-service-context';\nimport store from './store'\n\nconst frameStoreService = new FrameStoreService();\n\nReactDOM.render(\n<Provider store = {store}>\n    <ErrorBoundary>\n        <FrameStoreServiceProvider value={frameStoreService}>\n            <Router>\n                <App/>\n            </Router>\n        </FrameStoreServiceProvider>\n    </ErrorBoundary>\n</Provider>,\n document.getElementById('root'))\n\n"],"sourceRoot":""}