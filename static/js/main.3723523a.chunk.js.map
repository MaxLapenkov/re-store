{"version":3,"sources":["components/error-indicator/error-picture.png","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","components/frame-list-item/index.js","components/frame-list-item/frame-list-item.js","components/frame-store-service-context/frame-store-service-context.js","components/hoc/with-frame-store-service.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/frame-list/frame-list.js","components/frame-list/index.js","components/pages/home-page.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/cart-page.js","components/shop-header/index.js","components/shop-header/shop-header.js","components/app/index.js","components/app/app.js","services/frame-store-service.js","reducers/frame-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["module","exports","ErrorIndicator","className","src","icon","alt","width","ErrorBoundary","state","hasError","this","setState","props","children","Component","FrameListItem","frame","widthChanged","heightChanged","onAddedToCart","name","color","image","price","height","cost","Math","round","href","type","min","minLength","defaultValue","onChange","onClick","React","createContext","FrameStoreServiceProvider","Provider","FrameStoreServiceConsumer","Consumer","withFrameStoreService","Wrapped","frameStoreService","framesLoaded","newFrames","payload","framesRequested","id","framesError","error","frameAddedToCart","frameId","frameDeletedfromCart","allFramesDeletedfromCart","compose","funcs","comp","reduceRight","wrapped","f","Spinner","FrameList","frames","map","key","e","Number","target","value","FrameListContainer","fetchFrames","loading","connect","frameList","dispatch","ownProps","bindActionCreators","actions","getFrames","then","data","catch","err","HomePage","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","shoppingCart","items","cartItems","total","orderTotal","item","idx","count","CartPage","ShopHeader","numItems","to","App","cartItemsTotal","role","path","component","exact","FrameStoreService","Promise","resolve","reject","setTimeout","Error","updateFrameList","action","undefined","itemIndex","findIndex","newItemHeight","slice","newItemWidth","updateOrder","quantity","find","cartItemIndex","newCartItems","updateCartItems","cartItem","updateCartItem","Object","values","reduce","t","updateShoppingCart","itemToDelete","reducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3723523a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error-picture.362c250b.png\";","import ErrorIndicator from './error-indicator'\r\nexport default ErrorIndicator","import React from 'react';\r\nimport './error-indicator.css'\r\nimport icon from './error-picture.png';\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error-indicator\">\r\n            <img src={icon} alt=\"error-icon\" width=\"64\"/>\r\n            <span className=\"boom\">Извините<br/> У нас возникли технические трудности</span>\r\n            <span>Работа скоро будет восстановлена</span>\r\n        </div>\r\n    )\r\n}\r\nexport default ErrorIndicator;","import ErrorBoundary from './error-boundary'\r\nexport default ErrorBoundary","import React, {Component} from 'react'\r\nimport ErrorIndicator from '../error-indicator/'\r\n\r\nexport default class ErrorBoundary extends Component {\r\n    state ={\r\n        hasError: false\r\n    }\r\n        componentDidCatch() {\r\n            this.setState({hasError: true})    \r\n        }\r\n    \r\n        render() {\r\n            if(this.state.hasError) {\r\n                return <ErrorIndicator />\r\n            }\r\n            return this.props.children;\r\n        }\r\n}","import FrameListItem from './frame-list-item'\r\nexport default FrameListItem","import React from 'react'\nimport './frame-list-item.css'\n\nconst FrameListItem = ({frame, widthChanged, heightChanged, onAddedToCart}) => {\n    const {name, color, image, price, width, height} = frame\n\n    const cost = Math.round(width*height/100*price);\n    \n    return (\n        <div href=\"/\" className=\"frame-list-item\">\n            \n            <div className=\"frame-cover\">\n                <img src={image} alt=\"Рамка\" width=\"200\" height=\"200\"/>\n            </div>\n\n            <div className=\"frame-description\">\n                <h3 className=\"title\">{name}</h3> \n                <span>Цвет: {color}</span>\n                <span>Цена за метр: {price} рублей</span>\n                \n                    <label>\n                        <p>Ширина(cм):</p>\n                        <input type=\"number\" min=\"10\" minLength=\"2\" defaultValue={width} onChange={widthChanged}/>\n                    </label>\n\n                    <label >\n                        <p>Высота(cм):</p>\n                        <input type=\"number\" min=\"10\" minLength=\"2\" defaultValue={height} onChange={heightChanged}/>\n                    </label>\n                \n                <span>Цена: {cost}</span>\n                \n\n                <button \n                className=\"btn btn-info add-to-cart\"\n                onClick = {onAddedToCart}>Добавить в корзину</button>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default FrameListItem","import React from 'react'\r\n\r\nconst {\r\n    Provider : FrameStoreServiceProvider,\r\n    Consumer : FrameStoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    FrameStoreServiceProvider,\r\n    FrameStoreServiceConsumer\r\n}","import React from 'react'\r\nimport {FrameStoreServiceConsumer} from '../frame-store-service-context'\r\n\r\nconst withFrameStoreService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n        <FrameStoreServiceConsumer>\r\n            {\r\n                (frameStoreService) => {\r\n                    return (\r\n                        <Wrapped {...props} frameStoreService={frameStoreService}/>\r\n                    )\r\n                }\r\n            }\r\n        </FrameStoreServiceConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFrameStoreService","\nconst framesLoaded = (newFrames) => {\n    return {\n        type: 'FETCH_FRAMES_SUCCESS',\n        payload: newFrames\n    }\n}\nconst framesRequested = () => {\n    return {\n        type: 'FETCH_FRAMES_REQUEST'\n    }\n}\nconst widthChanged = (id, width) => {\n    \n    return {\n        type: 'WIDTH_UPDATE',\n        payload: id,\n        width: width,\n    }\n}\nconst heightChanged = (id, height) => {\n\n\n    return {\n        type: 'HEIGHT_UPDATE',\n        payload: id,\n        height: height,\n    }\n}\nconst framesError = (error) => {\n    return{\n        type: 'FRAMES_FAILURE',\n        payload: error\n    }\n}\nconst frameAddedToCart = (frameId) => {\n    return {\n        type: 'FRAME_ADDED_TO_CART',\n        payload: frameId\n    }\n}\nconst frameDeletedfromCart = (frameId) => {\n    return {\n        type: 'FRAME_DELETED_FROM_CART',\n        payload: frameId\n    }\n}\nconst allFramesDeletedfromCart = (frameId) => {\n    return {\n        type: 'ALL_FRAMES_DELETED_FROM_CART',\n        payload: frameId\n    }\n}\n\nexport {\n    framesLoaded,\n    framesRequested,\n    framesError,\n    widthChanged,\n    heightChanged,\n    frameAddedToCart,\n    frameDeletedfromCart,\n    allFramesDeletedfromCart\n}","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n}\r\nexport default compose","import Spinner from './spinner'\r\nexport default Spinner","import React from 'react'\r\n\r\nimport './spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-spinner-kwnefvytxq8 spinner\">\r\n            <div className=\"ldio-zqnhqhb31uk\">\r\n                <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\nimport FrameListItem from '../frame-list-item/'\nimport ErrorIndicator from '../error-indicator'\nimport {connect} from 'react-redux'\nimport './frame-list.css'\nimport {withFrameStoreService} from '../hoc'\nimport * as actions from '../../actions'\nimport {compose} from '../../utils'\nimport Spinner from '../spinner'\nimport { bindActionCreators } from 'redux'\n\nconst FrameList = ({frames, widthChanged, heightChanged, onAddedToCart}) => {\n    return (\n        <ul className=\"frame-list\">\n                {\n                    frames.map((frame) => {\n                        return (\n                            <li key={frame.key}><FrameListItem \n                            frame={frame} \n                            widthChanged={(e) => widthChanged(frame.id, Number(e.target.value))}\n                            heightChanged={(e) => heightChanged(frame.id, Number(e.target.value))}\n                            onAddedToCart={() => onAddedToCart(frame.id)}/></li>\n                        )\n                    })\n                }\n            </ul>\n    )\n}\nclass FrameListContainer extends Component {\n\n    \n    componentDidMount() {\n        this.props.fetchFrames();        \n    }\n\n \n    render() {\n        const {frames, loading, error, widthChanged, heightChanged, onAddedToCart} = this.props;\n        \n        if(loading) {\n            return(\n                <Spinner/>\n            )\n        }\n        if (error) {\n            return <ErrorIndicator/>\n        }\n        return (\n           <FrameList frames={frames} widthChanged={widthChanged} heightChanged={heightChanged} onAddedToCart={onAddedToCart}/>\n        )\n    }\n}\n\n\nconst mapStateToProps = ( {frameList: {frames, loading, error}}) => {\n    return{frames, loading, error}\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    const {frameStoreService} = ownProps;\n    const {framesRequested, framesLoaded, framesError, widthChanged, heightChanged, frameAddedToCart} = bindActionCreators(actions, dispatch)\n    \n    return{\n        fetchFrames: () => {\n            framesRequested();\n            frameStoreService.getFrames()\n            .then((data) => framesLoaded(data))\n            .catch((err) => framesError(err)) \n        },\n        widthChanged,\n        heightChanged,\n        onAddedToCart: frameAddedToCart\n    }\n    \n}\n\nexport default compose(\n    withFrameStoreService(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(FrameListContainer)\n\n\n","import FrameList from './frame-list'\r\nexport default FrameList","import React from 'react'\r\nimport FrameList from '../frame-list'\r\n\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <FrameList />\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default HomePage","import React from 'react'\nimport './shopping-cart-table.css'\nimport {connect} from 'react-redux'\nimport {frameDeletedfromCart, allFramesDeletedfromCart, frameAddedToCart} from '../../actions/'\n\nconst ShoppingCartTable = ({items, total, onIncrease, onDecrease, onDelete}) => {\n    const renderRow = (item, idx) => {\n        const {id, name, width, height, count, total} = item;\n                        return (\n                            <tr key={id}>\n                                <td>{idx + 1}</td>\n                                <td>{name}</td>\n                                <td>{width}</td>\n                                <td>{height}</td>\n                                <td>{count}</td>\n                                <td>{total} Р.</td>\n                                <td>\n                                    <button \n                                    className=\"btn btn-outline-danger btn-sm\"\n                                    onClick = {() => onDelete(id)}>\n                                        <i className=\"fa fa-trash-o\"/>\n                                    </button>\n                                    <button \n                                    className=\"btn btn-outline-success btn-sm\"\n                                    onClick = {() => onIncrease(id)}>\n                                        <i className=\"fa fa-plus-circle\"/>\n                                    </button>\n                                    <button \n                                    className=\"btn btn-outline-warning btn-sm\"\n                                    onClick = {() => onDecrease(id)}>\n                                        <i className=\"fa fa-minus-circle\"/>\n                                    </button>\n                                </td>\n                            </tr>\n                        )\n    }\n    return(\n        <div className=\"shopping-cart-table\">\n            <h2>Ваш заказ</h2>\n            <table className=\"table table-responsive-sm\">\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Предмет</th>\n                    <th>Ширина</th>\n                    <th>Высота</th>\n                    <th>Количество</th>\n                    <th>Цена</th>\n                    <th>Действие</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                    {items.map(renderRow)}\n                    \n                </tbody>\n            </table>\n            <div className=\"total\">\n                Сумма: {total} Р.\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({shoppingCart :{cartItems, orderTotal}}) => {\n    return {\n        items: cartItems,\n        total: orderTotal\n    }\n}\nconst mapDispatchToProps = {\n        onIncrease: frameAddedToCart,\n        onDecrease: frameDeletedfromCart,\n        onDelete: allFramesDeletedfromCart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable)","import ShoppingCartTable from './shopping-cart-table'\r\nexport default ShoppingCartTable","import React from 'react'\r\nimport ShoppingCartTable from '../shopping-cart-table'\r\nconst CartPage = () => {\r\n    return (\r\n        <ShoppingCartTable/>\r\n    )\r\n}\r\nexport default CartPage","import ShopHeader from './shop-header'\r\nexport default ShopHeader","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './shop-header.css'\r\nconst ShopHeader = ({numItems, total}) => {\r\n\r\n    return(\r\n        <header className=\"shop-header row\">\r\n            <Link className=\"logo text-dark\" to=\"/re-store\">ReStore</Link>\r\n            <Link to=\"/cart\" className=\"shopping-cart\">\r\n                <i className=\"cart-icon fa fa-shopping-cart\"/>\r\n                {numItems} Предметов ({total} Р.)\r\n            </Link>\r\n        </header>\r\n    )\r\n}\r\nexport default ShopHeader","import App from './app'\r\nexport default App","import React from 'react'\r\nimport ErrorBoundary from '../error-boundary/'\r\nimport { Route, Switch} from 'react-router-dom'\r\nimport {HomePage, CartPage} from '../pages/'\r\nimport ShopHeader from '../shop-header'\r\nimport {connect} from 'react-redux'\r\nconst App = ({orderTotal, cartItemsTotal}) =>{\r\n        return (\r\n            \r\n            <main role=\"main\" className=\"container\">\r\n            <ShopHeader numItems={cartItemsTotal} total={orderTotal}/>\r\n            <ErrorBoundary>\r\n                <Switch>\r\n                    <Route path=\"/re-store\" component={HomePage} exact/>\r\n                    <Route path=\"/cart\" component={CartPage}/>\r\n                </Switch>  \r\n            </ErrorBoundary>\r\n            </main>\r\n        )  \r\n}\r\nconst mapStateToProps = ( {shoppingCart: {orderTotal, cartItemsTotal}}) => {\r\n    return{orderTotal, cartItemsTotal}\r\n}\r\nexport default connect(mapStateToProps)(App)","export default class FrameStoreService {\n    data = [\n        {key: 1, id: 1, name: 'Белоснежка Flora', color: 'Белый', price: 50, width:20, height:20, image: \"https://cdn1.regmarkets.ru/r1200/a665ca0d8f5f6319a69359dc91434019.jpg\"},\n        {key: 2, id: 2, name: 'Белоснежка Ester', color: 'Серый', price: 100, width:20, height:20, image: \"https://cdn1.regmarkets.ru/r1200/a665ca0d8f5f6319a69359dc91434019.jpg\"},\n        {key: 3, id: 3, name: 'Мосфа Тоскана', color: 'Коричневый', price: 150, width:20, height:20, image: \"https://static.regmarkets.ru/detail/images/87/db/87dbeeab523e2992376eada899585b4d.jpg\"},\n        {key: 4, id: 4, name: 'Gamma', color: 'Коричневый', price: 200, width:20, height:20, image: \"https://static.regmarkets.ru/detail/images/b7/7c/b77c17a97669dc799e5877ce9d310693.jpg\"},\n    ]\n    getFrames() {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve(this.data)\n                reject(new Error('Server error'))\n            }, 700)\n        })\n    }\n}","const updateFrameList = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            frames: [],\r\n            loading: true,\r\n            error: null,\r\n        }\r\n    }  \r\n    const frameId = action.payload\r\n    const itemIndex = state.frameList.frames.findIndex(({id}) => id === frameId)\r\n    const item = state.frameList.frames[itemIndex];\r\n    const height = action.height\r\n    const width = action.width\r\n\r\n    \r\n    switch(action.type) {\r\n        case 'FETCH_FRAMES_REQUEST':\r\n            return {\r\n                frames: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_FRAMES_SUCCESS':\r\n            return {\r\n                frames: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRAMES_FAILURE': \r\n            return {\r\n                frames: [],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case 'HEIGHT_UPDATE':\r\n            let newItemHeight = {\r\n                ...item,\r\n                height: height,\r\n                id: item.id+1000\r\n            }\r\n            let newFramesHeight = [\r\n                ...state.frameList.frames.slice(0, itemIndex),\r\n                newItemHeight,\r\n                ...state.frameList.frames.slice(itemIndex + 1)\r\n            ]\r\n            \r\n        return {\r\n                frames: newFramesHeight\r\n        }\r\n        case 'WIDTH_UPDATE':\r\n            let newItemWidth = {\r\n                ...item,\r\n                width: width,\r\n                id: item.id+1000\r\n            }\r\n            let newFramesWidth = [\r\n                ...state.frameList.frames.slice(0, itemIndex),\r\n                newItemWidth,\r\n                ...state.frameList.frames.slice(itemIndex + 1)\r\n            ]\r\n            \r\n            return {\r\n                frames: newFramesWidth\r\n            }\r\n        default:\r\n            return state.frameList;\r\n    }\r\n}\r\n\r\nexport default updateFrameList","const updateCartItems = (cartItems, item, idx) => {\r\n    if(item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1)\r\n        ]\r\n    } \r\n    if(idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ]\r\n    } else {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            item,\r\n            ...cartItems.slice(idx + 1)\r\n        ]\r\n    }\r\n}\r\nconst updateCartItem = (frame, cartItem, quantity) => {\r\n    if(cartItem) {\r\n        return {\r\n            ...cartItem,\r\n            count: cartItem.count + quantity,\r\n            total: cartItem.total + quantity*Math.round(cartItem.width*cartItem.height*cartItem.price/100)\r\n        };\r\n\r\n    } else {\r\n        return {\r\n            id: frame.id,\r\n            name: frame.name,\r\n            count: 1,\r\n            width: frame.width,\r\n            height: frame.height,\r\n            total: Math.round(frame.width*frame.height*frame.price/100),\r\n            price: frame.price\r\n        };  \r\n    }\r\n}\r\nconst updateOrder = (state, frameId, quantity) => {\r\n    const {frameList: {frames},shoppingCart: {cartItems}} = state\r\n    const frame = frames.find((frame) => frame.id === frameId)\r\n    const cartItemIndex = cartItems.findIndex(({id}) => id === frameId)\r\n    const cartItem = cartItems[cartItemIndex]\r\n    \r\n    const newItem = updateCartItem(frame, cartItem, quantity)\r\n    const newCartItems = updateCartItems(cartItems, newItem, cartItemIndex)\r\n    const orderTotal = Object.values(newCartItems).reduce((t, {total}) => t + total, 0)\r\n    const cartItemsTotal = Object.values(newCartItems).reduce((t, {count}) => t + count, 0)\r\n        return {\r\n        orderTotal: orderTotal,\r\n        cartItems: newCartItems,\r\n        cartItemsTotal: cartItemsTotal\r\n        }\r\n}\r\n\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0,\r\n            cartItemsTotal: 0\r\n        }\r\n    }\r\n    switch(action.type) {\r\n        case 'FRAME_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1)\r\n           \r\n        case 'FRAME_DELETED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1)\r\n        case 'ALL_FRAMES_DELETED_FROM_CART':\r\n            const itemToDelete = state.shoppingCart.cartItems.find(({id}) => id === action.payload)\r\n            return updateOrder(state, action.payload, -itemToDelete.count)\r\n        default:\r\n            return state.shoppingCart;\r\n     }\r\n}\r\nexport default updateShoppingCart","import updateFrameList from './frame-list'\nimport updateShoppingCart from './shopping-cart'\n\nconst reducer = (state, action) => {\n    return {\n        frameList: updateFrameList(state, action),\n        shoppingCart: updateShoppingCart(state, action),\n    }   \n}\n\nexport default reducer","import {createStore} from 'redux'\r\n\r\nimport reducer from './reducers'\r\n\r\n\r\nconst store = createStore(reducer)\r\n\r\n\r\nexport default store;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport App from './components/app/';\nimport ErrorBoundary from './components/error-boundary/';\nimport FrameStoreService from './services/frame-store-service';\nimport {FrameStoreServiceProvider} from './components/frame-store-service-context';\nimport store from './store'\n\nconst frameStoreService = new FrameStoreService();\n\nReactDOM.render(\n<Provider store = {store}>\n    <ErrorBoundary>\n        <FrameStoreServiceProvider value={frameStoreService}>\n            <Router>\n                <App/>\n            </Router>\n        </FrameStoreServiceProvider>\n    </ErrorBoundary>\n</Provider>,\n document.getElementById('root'))\n\n"],"sourceRoot":""}